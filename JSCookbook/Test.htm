<!DOCTYPE html>
<html>
	<head>
		<title>Lenny's JavaScript Cookbook Tests</title>
		<script type="text/javascript" src="Unit Testing/00_JsUnitTesting_partial.js"></script>
		<script type="text/javascript" src="Unit Testing/01_AssertionError.js"></script>
		<script type="text/javascript" src="Unit Testing/02_Assert.js"></script>
		<script type="text/javascript" src="Unit Testing/03_TestExecutionObject.js"></script>
		<script type="text/javascript" src="Unit Testing/04_UnitTest.js"></script>
		<script type="text/javascript" src="Unit Testing/05_TestCollection.js"></script>
		<script type="text/javascript" src="Unit Testing/06_TestResult.js"></script>
		<script type="text/javascript" src="Scripts/TypeExtensions.js"></script>
		<script type="text/javascript">
		    function Button1_onclick() {
		        var tc = new JsUnitTesting.TestCollection("My Test");

		        var nestedErrorConstructorTest = function () {
		            var message = "test Error";
		            var innerError = "My Inner";
		            var err = new NestedError(1, message, innerError);
		            this.assert.areEqual(1, err.number);
		            this.assert.areEqual(message, err.message);
		            this.assert.areEqual(innerError, err.innerError);
		        };
		        tc.push(new JsUnitTesting.UnitTest(nestedErrorConstructorTest));

		        var formatErrorConstructorTest = function () {
		            var message = "test Error";
		            var innerError = "My Inner";
		            var formatString = "my format string";
		            var position = 5;
		            var err = new FormatError(1, message, formatString, position, innerError);
		            this.assert.areEqual(1, err.number);
		            this.assert.areEqual(message, err.message);
		            this.assert.areEqual(formatString, err.formatString);
		            this.assert.areEqual(position, err.position);
		            this.assert.areEqual(innerError, err.innerError);
		        };
		        tc.push(new JsUnitTesting.UnitTest(formatErrorConstructorTest));

		        var keyNotFoundErrorConstructorTest = function () {
		            var message = "test Error";
		            var innerError = "My Inner";
		            var formatString = "my format string";
		            var position = 5;
		            var key = "abc";
		            var err = new KeyNotFoundError(1, message, key, formatString, position, innerError);
		            this.assert.areEqual(1, err.number);
		            this.assert.areEqual(message, err.message);
		            this.assert.areEqual(key, err.key);
		            this.assert.areEqual(formatString, err.formatString);
		            this.assert.areEqual(position, err.position);
		            this.assert.areEqual(innerError, err.innerError);
		        };
		        tc.push(new JsUnitTesting.UnitTest(keyNotFoundErrorConstructorTest));

		        var result = tc.runTests();
		        var resultContainer = document.getElementById("resultContainer");
		        resultContainer.innerText = JsUnitTesting.TestResult.getTestResultsTableHtml(result);
		    }
        </script>
	    <style type="text/css">
            table.results, table.error
            {
                border-collapse: collapse;
            }
            table.results, table.error, table.results th, table.results td
            {
                border: 1px solid #000000;
                margin: 0px;
            }
            table.results th, table.results td, table.error th, table.error td
            {
                padding: 4px;
                background-color: White;
            }
            table.results th, table.results td
            {
                color: #000000;
            }
            table.error th, table.error td
            {
                color: #cc0000;
            }
            table.results th, table.error th
            {
                vertical-align: bottom;
            }
            table.results td, table.error td
            {
                vertical-align: top;
            }
            table.results tr.altRow td
            {  
                vertical-align: top;
                background-color: Gray;
            }
            td.special
            {
                font-style: italic;
            }
            td.heading
            {
                text-align: right;
                font-weight: bold;
            }
        </style>
	</head>
	<body>
        <form action="test.htm" method="post">
    		<h1>Lenny's JavaScript Cookbook Tests</h1>
            <input id="Button1" type="button" value="Run Tests" onclick="return Button1_onclick()" />
            <span id="resultContainer">
                <table class="results">
                    <tr>
                        <th>Test Name</th>
                        <th>Success?</th>
                        <th>Started</th>
                        <th>Error</th>
                        <th>Test Output</th>
                    </tr>
                    <tr>
                        <td>First Test</td>
                        <td>No</td>
                        <td>Fri Nov 8 14:09:47 EST 2013</td>
                        <td>
                            <table class="error">
                                <tr>
                                    <td class="heading">Number:</td>
                                    <td>1</td>
                                </tr>
                                <tr>
                                    <td class="heading">Message:</td>
                                    <td>This is a test failure</td>
                                </tr>
                            </table>
                        </td>
                        <td class="special">(undefined)</td>
                    </tr>
                </table>
            </span>
        </form>
	</body>
</html>
