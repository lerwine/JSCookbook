{
    // See https://go.microsoft.com/fwlink/?LinkId=733558
    // for the documentation about the tasks.json format
    "version": "2.0.0",
    "tasks": [
        {
            "type": "typescript",
            "tsconfig": "src/JSUnitTesting/tsconfig.json",
            "problemMatcher": [
                "$tsc"
            ],
            "group": {
                "kind": "build",
                "isDefault": true
            }
        },
        {
            "label": "Build JSUnitTesting Min",
            "type": "shell",
            "command": "uglifyjs",
            "identifier": "buildJSUnitTestingMin",
            "group": "build",
            "args": [
                "./src/JSUnitTesting/Utility.js",
                "./src/JSUnitTesting/TypeSpec.js",
                "./src/JSUnitTesting/TestResult.js",
                "./src/JSUnitTesting/UnitTest.js",
                "./src/JSUnitTesting/TestCollection.js",
                "./src/JSUnitTesting/AssertionError.js",
                "./src/JSUnitTesting/Assert.js",
                "-o",
                "./Dist/JSUnitTesting.min.js",
                "--source-map",
                "--source-map-root",
                "https://github.com/lerwine/JSCookbook/tree/master/src/JSUnitTesting",
                "-c",
                "-m"
            ],
            "problemMatcher":"$jshint"
        },
        {
            "label": "Build JSUnitTesting",
            "identifier": "buildJSUnitTesting",
            "dependsOn": ["buildJSUnitTestingMin"],
            "type": "shell",
            "command": "uglifyjs",
            "group": "build",
            "args": [
                "./src/JSUnitTesting/Utility.js",
                "./src/JSUnitTesting/TypeSpec.js",
                "./src/JSUnitTesting/TestResult.js",
                "./src/JSUnitTesting/UnitTest.js",
                "./src/JSUnitTesting/TestCollection.js",
                "./src/JSUnitTesting/AssertionError.js",
                "./src/JSUnitTesting/Assert.js",
                "-o",
                "./Dist/JSUnitTesting.js",
                "--source-map",
                "--source-map-root",
                "https://github.com/lerwine/JSCookbook/tree/master/src/JSUnitTesting",
                "-b"
            ],
            "problemMatcher":"$jshint"
        },
        {
            "label": "Test JSUnitTesting",
            "identifier": "testJSUnitTesting",
            "dependsOn": ["buildJSUnitTesting"],
            "type": "shell",
            "command": "node",
            "group":{
                "kind": "test",
                "isDefault": true
            },
            "args": [
                "./Testing/UnitTestingValidation.js",
                "../src/JSUnitTesting/Utility.js",
                "../src/JSUnitTesting/TypeSpec.js",
                "../src/JSUnitTesting/TestResult.js",
                "../src/JSUnitTesting/UnitTest.js",
                "../src/JSUnitTesting/TestCollection.js",
                "../src/JSUnitTesting/AssertionError.js",
                "../src/JSUnitTesting/Assert.js",
            ],
            "problemMatcher": [
                {
                    "severity": "error",
                    "pattern":[
                        {
                            "regexp": "^(?:ERROR|FAIL)\\s*\\[[45](?:@(\\d+)>(?:,(\\d+))?)?(?:~([^\\[\\]]*))?\\](?:\\s*(.+))?",
                            "line": 1,
                            "column": 2,
                            "file": 3,
                            "message": 4
                        }
                    ]
                }, {
                    "severity": "warning",
                    "pattern":[
                        {
                            "regexp": "^(?:WARNING|INCONCLUSIVE)\\s*\\[(?:-1|3)(?:@(\\d+)>(?:,(\\d+))?)?(?:~([^\\[\\]]*))?\\](?:\\s*(.+))?",
                            "line": 1,
                            "column": 2,
                            "file": 3,
                            "message": 4
                        }
                    ]
                }, {
                    "severity": "info",
                    "pattern":[
                        {
                            "regexp": "^(INFO|PASS)\\s*\\[2(?:@(\\d+)>(?:,(\\d+))?)?(?:~([^\\[\\]]*))?\\](?:\\s*(.+))?",
                            "line": 1,
                            "column": 2,
                            "file": 3,
                            "message": 4
                        }
                    ]
                }
            ]
        }
    ]
}